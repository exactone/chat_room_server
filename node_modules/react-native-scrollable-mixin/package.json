{
  "_args": [
    [
      {
        "raw": "react-native-scrollable-mixin@^1.0.1",
        "scope": null,
        "escapedName": "react-native-scrollable-mixin",
        "name": "react-native-scrollable-mixin",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/Users/bonzo/Workspace/Node/lab33/react-native-socket-io-example/node_modules/react-native-invertible-scroll-view"
    ]
  ],
  "_from": "react-native-scrollable-mixin@>=1.0.1 <2.0.0",
  "_id": "react-native-scrollable-mixin@1.0.1",
  "_inCache": true,
  "_location": "/react-native-scrollable-mixin",
  "_nodeVersion": "2.3.3",
  "_npmUser": {
    "name": "ide",
    "email": "ide+npm@jameside.com"
  },
  "_npmVersion": "2.11.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-scrollable-mixin@^1.0.1",
    "scope": null,
    "escapedName": "react-native-scrollable-mixin",
    "name": "react-native-scrollable-mixin",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-native-invertible-scroll-view"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-scrollable-mixin/-/react-native-scrollable-mixin-1.0.1.tgz",
  "_shasum": "34a32167b64248594154fd0d6a8b03f22740548e",
  "_shrinkwrap": null,
  "_spec": "react-native-scrollable-mixin@^1.0.1",
  "_where": "/Users/bonzo/Workspace/Node/lab33/react-native-socket-io-example/node_modules/react-native-invertible-scroll-view",
  "author": {
    "name": "James Ide"
  },
  "bugs": {
    "url": "https://github.com/exponentjs/react-native-scrollable-mixin/issues"
  },
  "dependencies": {},
  "description": "A standard interface for your scrollable React Native components, making it easier to compose components.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "34a32167b64248594154fd0d6a8b03f22740548e",
    "tarball": "https://registry.npmjs.org/react-native-scrollable-mixin/-/react-native-scrollable-mixin-1.0.1.tgz"
  },
  "gitHead": "8278de26a156ee98de6d09e2d6162e824ac7e647",
  "homepage": "https://github.com/exponentjs/react-native-scrollable-mixin",
  "keywords": [
    "react-native",
    "scroll",
    "scrollview",
    "mixin"
  ],
  "license": "MIT",
  "main": "ScrollableMixin.js",
  "maintainers": [
    {
      "name": "ide",
      "email": "ide+npm@jameside.com"
    },
    {
      "name": "ccheever",
      "email": "ccheever@gmail.com"
    }
  ],
  "name": "react-native-scrollable-mixin",
  "optionalDependencies": {},
  "readme": "# ScrollableMixin\n\nScrollableMixin lets your scrollable React Native components conform to a standard interface, making it easier to compose components. This lets you compose different types of ScrollView-like components while preserving the `ScrollView` API, including methods like `scrollTo`.\n\nSee [react-native-scrollable-decorator](https://github.com/exponentjs/react-native-scrollable-decorator) for the decorator version of this mixin.\n\n[![npm package](https://nodei.co/npm/react-native-scrollable-mixin.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/react-native-scrollable-mixin/)\n\n## Installation\n```\nnpm install react-native-scrollable-mixin\n```\n\n## Usage\n\nAdd ScrollableMixin to your scrollable React components and implement `getScrollResponder()`, which must return the underlying scrollable component's scroll responder.\n\n## With JavaScript classes\n\nUse `Object.assign` to copy ScrollableMixin's functions to your class's prototype as instance methods:\n\n```js\nclass InfiniteScrollView extends React.Component {\n  static propTypes = {\n    ...ScrollView.propTypes,\n    renderScrollComponent: PropTypes.func.isRequired\n  };\n\n  /**\n   * IMPORTANT: You must return the scroll responder of the underlying\n   * scrollable component from getScrollResponder() when using ScrollableMixin.\n   */\n  getScrollResponder() {\n    return this._scrollView.getScrollResponder();\n  }\n\n  setNativeProps(props) {\n    this._scrollView.setNativeProps(props);\n  }\n\n  render() {\n    let { renderScrollComponent, ...props } = this.props;\n    return React.cloneElement(renderScrollComponent(props), {\n      ref: component => { this._scrollView = component; },\n    });\n  }\n}\n\n// Mix in ScrollableMixin's methods as instance methods\nObject.assign(InfiniteScrollView.prototype, ScrollableMixin);\n```\n\n### With `React.createClass`\n\n```js\nlet ScrollableMixin = require('react-native-scrollable-mixin');\n\nlet InfiniteScrollView = React.createClass({\n  mixins: [ScrollableMixin],\n\n  propTypes: {\n    ...ScrollView.propTypes,\n    renderScrollComponent: PropTypes.func.isRequired,\n  },\n\n  /**\n   * IMPORTANT: You must return the scroll responder of the underlying\n   * scrollable component from getScrollResponder() when using ScrollableMixin.\n   */\n  getScrollResponder() {\n    return this._scrollView.getScrollResponder();\n  },\n\n  setNativeProps(props) {\n    this._scrollView.setNativeProps(props);\n  },\n\n  render() {\n    var {\n      renderScrollComponent,\n      ...props\n    } = this.props;\n    return React.cloneElement(renderScrollComponent(props), {\n      ref: component => { this._scrollView = component; },\n    });\n  },\n});\n```\n\n## Features\n\nBy mixing in ScrollableMixin, your custom component gets the `ScrollView` API. For example:\n\n```js\nclass App extends React.Component {\n  render() {\n    return (\n      <ListView\n        ref={component => this._scrollView = component}\n        renderScrollView={props => <InfiniteScrollView {...props} />}\n        dataSource={...}\n        renderRow={...}\n      />\n    );\n  }\n\n  _scrollToTop() {\n    // By having all scrollable components conform to ScrollableMixin's\n    // standard, calling `scrollTo` on your top-level scrollable component will\n    // successfully scroll the underlying scroll view.\n    this._scrollView.scrollTo(0, 0);\n  }\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/exponentjs/react-native-scrollable-mixin.git"
  },
  "scripts": {
    "test": "jest"
  },
  "version": "1.0.1"
}
